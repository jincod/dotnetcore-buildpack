#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

### Configure environment
set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
set -o nounset    # fail on unset variables
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

if [ "$STACK" != "heroku-16" ] && [ "$STACK" != "heroku-18" ]; then
	echo "Need heroku-16 or heroku-18 stack"
	exit 1
fi

### Configure directories
BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

mkdir -p $BUILD_DIR/.profile.d
cp $BP_DIR/profile/* $BUILD_DIR/.profile.d/

### Load dependencies
source $BP_DIR/lib/utils

export_env_dir "$ENV_DIR"
export NUGET_XMLDOC_MODE=${NUGET_XMLDOC_MODE:-skip}
export DOTNET_SKIP_FIRST_TIME_EXPERIENCE=${DOTNET_SKIP_FIRST_TIME_EXPERIENCE:-1}
export DOTNET_CLI_TELEMETRY_OPTOUT=${DOTNET_CLI_TELEMETRY_OPTOUT:-1}
export NUGET_PACKAGES="${CACHE_DIR}/nuget/cache"

echo "Installing dotnet"
install_dotnet $BUILD_DIR $CACHE_DIR

export PATH="${BUILD_DIR}/.heroku/dotnet:${PATH}"

cd $BUILD_DIR

function publish() {
	echo "publish $1"
	dotnet publish $1 --output $2 --configuration Release --runtime linux-x64
}

if [ -e "$BUILD_DIR/Procfile" ]; then
    numberOfProjects=0
	while read line || [[ -n "$line" ]];
    do
        if [[ $line =~ [0-9A-Za-z\.]+\.dll ]]; then
            PROJECT_NAME=${BASH_REMATCH[0]%.dll}
			publish $PROJECT_NAME $BUILD_DIR/heroku_output/$PROJECT_NAME
			numberOfProjects=$((numberOfProjects+1))
        fi
    done < $BUILD_DIR/Procfile
	if (($numberOfProjects > 0)); then
		exit 0
	else
		echo "Procfile file found but no projects published"
		exit 1
	fi
fi

if [ -z ${PROJECT_FILE:-} ]; then
	PROJECT_FILE=$(x=$(dirname $(find ${BUILD_DIR} -maxdepth 5 -iname Startup.cs | head -1)); while [[ "$x" =~ $BUILD_DIR ]] ; do find "$x" -maxdepth 1 -name *.csproj; x=`dirname "$x"`; done)
fi

if [ -z ${PROJECT_NAME:-} ]; then
	PROJECT_NAME=$(basename ${PROJECT_FILE%.*})
fi

publish $PROJECT_FILE ${BUILD_DIR}/heroku_output

cat << EOT >> ${BUILD_DIR}/Procfile
web: cd \$HOME/heroku_output && ASPNETCORE_URLS=http://+:\$PORT ./${PROJECT_NAME}
EOT
